import{G as b,D as d,A as c,c as B,b as O,u as M,d as x,e as N}from"./Dz1ThuZh.js";import{i as z}from"./2tuZ5JlQ.js";function P(C,e,t,r=b.Unspecified,s){s||(r===b.Female?s=76:r===b.Male?s=86:s=79);const o=789,u=r===b.Male?.68:.55,f=C*(e/100)*o,p=f/t,m=f/(s*u),g=m/t,S=f/12;return{[d.AlcoholGrams]:parseFloat(f.toFixed(2)),[d.AlcoholGramsPerEuro]:parseFloat(p.toFixed(2)),[d.EstimatedPromille]:parseFloat(m.toFixed(3)),[d.PromillePerEuro]:parseFloat(g.toFixed(4)),[d.Servings]:parseFloat(S.toFixed(1))}}class y{data=[];personalInfo;filters=[];possibleValues={};columnTypes={};minAndMaxValues=[];subValues={};constructor(e,t){this.personalInfo=t||{weight:null,gender:b.Unspecified};const[r,...s]=e,o=Object.values(d);this.filters=[...r,...o];const u=r.indexOf(c.Type),f=r.reduce((i,a,E)=>({...i,[a]:E}),{}),p=[...Array(r.length)].map(()=>[]),m=[...Array(o.length)].map(()=>[]),g=/^(?:0|[1-9]\d*)(?:\.\d+)?(?:\s*l)?$/,S=i=>g.test(String(i)),A=i=>i.trim().toLowerCase().charAt(0).toUpperCase()+i.slice(1);for(let i=0;i<s.length;i++){const a={};if(s[i][u]==="lahja- ja juomatarvikkeet")continue;for(let l=0;l<r.length;l++){const h=r[l];let n=s[i][l];B.includes(h)?n=A(String(n)):O.includes(h)?n=new Set(String(n||"").split(/[\.,]\s/).map(T=>A(T.trim())).filter(T=>T.length>0)):S(n)?n=Number.parseFloat(String(n)):typeof n=="string"?n=A(n):M.includes(h)?n=0:n="",n instanceof Set&&n.has("Null"),a[h]=n,(S(n)||typeof n=="string"&&n.length||typeof n=="number")&&p[l].push(n),n instanceof Set&&n.size&&p[l].push(...Array.from(n))}const j=P(a[c.BottleSize],a[c.AlcoholPercentage],a[c.Price],t?.gender,t?.weight??void 0);if(o.forEach((l,h)=>{m[h].push(j[l]),a[l]=j[l]}),a[c.Type]||(a[c.Type]="Ei määritelty",p[f[c.Type]].push(a[c.Type])),!a[c.SubType]){const l=a[c.BeerType]||a[c.Type];a[c.SubType]=l,p[f[c.SubType]].push(a[c.SubType])}Object.keys(x).forEach(l=>{const h=a[l];this.subValues[l]||(this.subValues[l]={}),this.subValues[l][h]||(this.subValues[l][h]=new Set);const n=a[x[l]];n&&n.toString().trim().length&&this.subValues[l][h].add(n)}),this.data.push(a)}const F=[...r,...o],V=[...p,...m];this.possibleValues=Object.fromEntries(V.map((i,a)=>[F[a],new Set(i.sort())])),this.columnTypes=Object.fromEntries(Object.entries(this.possibleValues).map(([i,a])=>O.includes(i)?[i,"object"]:[i,typeof a.values().next().value])),this.minAndMaxValues=F.map((i,a)=>this.columnTypes[i]!=="number"||i===c.SortingCode?null:[Math.min(...V[a]),Math.max(...V[a])]),this.data=this.sortBy(N)}getFilterKeys(){return this.filters}getFilterValues(e){return this.possibleValues[e]?Array.from(this.possibleValues[e]):[]}getSubFilterValues(e,t){return this.subValues[e]?Array.from(this.subValues[e][t]):[]}getFilterType(e){return this.columnTypes[e]}getMinAndMaxValues(e){return this.minAndMaxValues[this.filters.indexOf(e)]||[0,0]}fuzzySearch(e,t){return this.data.filter(r=>{if(!r[e])return!1;if(r[e].toString().toLowerCase().includes(t.toLowerCase()))return!0;const s=r[e].toString().split(" ");for(let o of s)return z(o,t,.6);return!1})}sortBy(e,t=!0){return this.data.sort((r,s)=>r[e]<s[e]?t?-1:1:r[e]>s[e]?t?1:-1:0)}sortByNested(e,t,r=!0){return t?this.data.sort((s,o)=>s[e][t]<o[e][t]?r?-1:1:s[e][t]>o[e][t]?r?1:-1:0):this.sortBy(e,r)}fuzzySearchAndFilter(e,t){let r=this.fuzzySearch(c.Name,e);return Object.keys(t).length===0?r:(t=Object.fromEntries(Object.entries(t).filter(([s,o])=>o instanceof Set?o.size>0:o.length>0)),r.filter(s=>Object.keys(t).every(u=>{const f=this.getFilterType(u);return f==="number"&&Array.isArray(t[u])&&t[u].length===2?s[u]>=t[u][0]&&s[u]<=t[u][1]:f==="object"&&s[u]instanceof Set&&t[u]instanceof Set?t[u].isSubsetOf(s[u]):t[u]instanceof Set?s[u]&&t[u].has(s[u]):Array.isArray(t[u])?s[u]&&t[u].includes(s[u]):s[u]===t[u]})))}filter(e){return e=Object.fromEntries(Object.entries(e).filter(([t,r])=>r instanceof Set?r.size>0:r.length>0)),this.data.filter(t=>Object.keys(e).every(r=>this.getFilterType(r)==="number"&&Array.isArray(e[r])&&e[r].length===2?t[r]>=e[r][0]&&t[r]<=e[r][1]:e[r]instanceof Set?t[r]&&e[r].has(t[r]):Array.isArray(e[r])?t[r]&&e[r].includes(t[r]):t[r]===e[r]))}filterByRange(e,t,r){return this.data.filter(s=>{const o=Number(s[e]);return!isNaN(o)&&o>=t&&o<=r})}getPossibleValues(){const e={};return this.filters.forEach(t=>{e[t]=Array.from(this.possibleValues[t])}),e}findById(e){return this.data.find(t=>t[c.Number]===e)}findByColumn(e,t){return this.data.filter(r=>r[e]===t)}}export{y as K};
